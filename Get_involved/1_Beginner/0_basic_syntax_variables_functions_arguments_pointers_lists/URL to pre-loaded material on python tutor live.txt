http://www.pythontutor.com/live.html#code=R_main%20%3D%208.314%0A%0AT_main%3D273%0A%0AP_main%20%3D%201e5%0A%0AigV_temp%20%3D%20R_main*T_main/P_main%0A%0A%23%20a%20routine%20to%20operate%20on%20local%20variables%0Adef%20igV_macro(%29%3A%0A%20%20%20%20return%20R_main*T_main/P_main%0A%0A%23tests%0A%0AigV_ans%20%3D%20igV_macro(%29%0A%0AT_main%3D298%20%23notice%20how%20this%20ovewrites%20the%20values%20of%20T%20and%20P%20in%20the%20'Global%20frame'%20table%0A%0A%23notice%20how%20when%20we%20call%20the%20function%20a%20cell%20for%20it%20appears%20in%20the%20'Global%20frame'%20table,%20and%20when%20it%20has%20served%20its%20purposed%20it%20disappears%0AigV_ans%20%3D%20igV_macro(%29%20%0A%23also%20notice%20how%20the%20value%20of%20the%20variable%20igV_ans%20is%20overwriten%0A%0A%23%20a%20function%20using%20that%20routine%0Adef%20igV_function1(T_in,P_in%29%3A%20%23these%20T_in%20and%20P_in%20are%20called%20dummy%20arguments%0A%23that%20means%20the%20function%20will%20provide%20different%20results%20depending%20on%20the%20values%20provided%20for%20these%20dummy%20arguments,%20via%20the%20actual%20arguments%0A%23see%20below%20the%20**function%20call**%20and%20the%20actual%20arguments**%0A%20%20%20%20T_local%20%3D%20T_in%20%23notice%20how%20this%20ovewrites%20the%20values%20of%20T%20and%20P%20in%20the%20'Global%20frame'%20table%0A%20%20%20%20P_local%20%3D%20P_in%0A%20%20%20%20%0A%20%20%20%20T_main%3D%20T_in%20%23this%20does%20not%20overwrite%20T_main,%20this%20creates%20a%20new%20variable%20instead%0A%20%20%20%20P_main%3D%20P_in%20%23this%20does%20not%20overwrite%20T_main,%20this%20creates%20a%20new%20variable%20instead%0A%20%20%20%20%0A%20%20%20%20igV_ans%20%3D%20igV_macro(%29%20%23notice%20how%20the%20stack%20of%20functions%20call%20is%20formed%20in%20the%20'Global%20frame'%20table%0A%20%20%20%20return%20igV_ans%0A%0AP_test%3D1e5%0A%0AT_test%3D273%0Aans_igV%3DigV_function1(T_in%3DT_test,P_in%3DP_test%29%0A%0AT_test%3D298%20%20%20%20%0Aans_igV%3DigV_function1(T_in%3DT_test,P_in%3DP_test%29%0A%0Adef%20igV_function2(T_in,P_in%29%3A%0A%20%20%20%20igV_temp%20%3D%20R_main*T_in/P_in%0A%20%20%20%20return%20igV_temp%0A%0A%23see%20it%20work%0AP_test%20%3D%201e5%0A%0AT_test%3D273%0AigV_ans%20%3D%20igV_function2(T_in%3DT_test,%20P_in%3DP_test%29%0A%0AT_test%3D293%0AigV_ans%20%3D%20igV_function2(T_in%3DT_test,%20P_in%3DP_test%29%0A%0A%0A%23%20dont%20creat%20function%20pointers%20accidentally%0A%0AigV_function_ptr%20%3D%20igV_macro%20%23this%20does%20not%20evaluate%20the%20routine,%20it%20creates%20an%20alias%0A%23see%20in%20the%20'Global%20frame'%20how%20two%20arrows%20point%20two%20different%20names%20to%20the%20same%20actual%20routine%0A%0AigV_ans%3DigV_function_ptr(%29%20%23this%20will%20evaluate%20that%20routine%20calling%20via%20the%20alias%20name%0A%0A%23%20pointer%20to%20functions%20are%20used%20in%20callbacks%0A%0A%23define%20a%20function%20that%20works%20with%20another%20function%0A%23that%20is%20frequently%20used%20in%20numerical%20methods%0A%0Adef%20trapez_function(f,inf,sup%29%3A%0A%20%20%20%20ret%20%3D%20(f(inf%29%2Bf(sup%29%29%20/%202%0A%20%20%20%20return%20ret%0A%20%20%20%20%0Adef%20line_function(x%29%3A%20%23a%20line%20function%0A%20%20%20%20return%205*x%2B1%0A%20%20%20%20%0Atrapez_ans%20%3D%20trapez_function(line_function,0,1%29%0A%0A%23%23%23%20v2%0A%0AR_main%20%3D%208.314%0A%0AT_main%3D273%0A%0AP_main%20%3D%201e5%0A%0AigV_temp%20%3D%20R_main*T_main/P_main%0A%0A%23%20a%20routine%20to%20operate%20on%20local%20variables%0Adef%20igV_macro(%29%3A%0A%20%20%20%20return%20R_main*T_main/P_main%0A%0A%23tests%0A%0AigV_ans%20%3D%20igV_macro(%29%0A%0AT_main%3D298%20%23notice%20how%20this%20ovewrites%20the%20values%20of%20T%20and%20P%20in%20the%20'Global%20frame'%20table%0A%0A%23notice%20how%20when%20we%20call%20the%20function%20a%20cell%20for%20it%20appears%20in%20the%20'Global%20frame'%20table,%20and%20when%20it%20has%20served%20its%20purposed%20it%20disappears%0AigV_ans%20%3D%20igV_macro(%29%20%0A%23also%20notice%20how%20the%20value%20of%20the%20variable%20igV_ans%20is%20overwriten%0A%0A%23%20a%20function%20using%20that%20routine%0Adef%20igV_function1(T_in,P_in%29%3A%20%23these%20T_in%20and%20P_in%20are%20called%20dummy%20arguments%0A%23that%20means%20the%20function%20will%20provide%20different%20results%20depending%20on%20the%20values%20provided%20for%20these%20dummy%20arguments,%20via%20the%20actual%20arguments%0A%23see%20below%20the%20**function%20call**%20and%20the%20actual%20arguments**%0A%20%20%20%20T_local%20%3D%20T_in%20%23notice%20how%20this%20ovewrites%20the%20values%20of%20T%20and%20P%20in%20the%20'Global%20frame'%20table%0A%20%20%20%20P_local%20%3D%20P_in%0A%20%20%20%20%0A%20%20%20%20T_main%3D%20T_in%20%23this%20does%20not%20overwrite%20T_main,%20this%20creates%20a%20new%20variable%20instead%0A%20%20%20%20P_main%3D%20P_in%20%23this%20does%20not%20overwrite%20T_main,%20this%20creates%20a%20new%20variable%20instead%0A%20%20%20%20%0A%20%20%20%20igV_ans%20%3D%20igV_macro(%29%20%23notice%20how%20the%20stack%20of%20functions%20call%20is%20formed%20in%20the%20'Global%20frame'%20table%0A%20%20%20%20return%20igV_ans%0A%0AP_test%3D1e5%0A%0AT_test%3D273%0Aans_igV%3DigV_function1(T_in%3DT_test,P_in%3DP_test%29%0A%0AT_test%3D298%20%20%20%20%0Aans_igV%3DigV_function1(T_in%3DT_test,P_in%3DP_test%29%0A%0Adef%20igV_function2(T_in,P_in%29%3A%0A%20%20%20%20igV_temp%20%3D%20R_main*T_in/P_in%0A%20%20%20%20return%20igV_temp%0A%0A%23see%20it%20work%0AP_test%20%3D%201e5%0A%0AT_test%3D273%0AigV_ans%20%3D%20igV_function2(T_in%3DT_test,%20P_in%3DP_test%29%0A%0AT_test%3D293%0AigV_ans%20%3D%20igV_function2(T_in%3DT_test,%20P_in%3DP_test%29%0A%0A%0A%23%20dont%20creat%20function%20pointers%20accidentally%0A%0AigV_function_ptr%20%3D%20igV_macro%20%23this%20does%20not%20evaluate%20the%20routine,%20it%20creates%20an%20alias%0A%23see%20in%20the%20'Global%20frame'%20how%20two%20arrows%20point%20two%20different%20names%20to%20the%20same%20actual%20routine%0A%0AigV_ans%3DigV_function_ptr(%29%20%23this%20will%20evaluate%20that%20routine%20calling%20via%20the%20alias%20name%0A%0A%23%20pointer%20to%20functions%20are%20used%20in%20callbacks%0A%0A%23define%20a%20function%20that%20works%20with%20another%20function%0A%23that%20is%20frequently%20used%20in%20numerical%20methods%0A%0Adef%20trapez_function(f,inf,sup%29%3A%0A%20%20%20%20ret%20%3D%20(f(inf%29%2Bf(sup%29%29%20/%202%0A%20%20%20%20return%20ret%0A%20%20%20%20%0Adef%20line_function(x%29%3A%20%23a%20line%20function%0A%20%20%20%20return%205*x%2B1%0A%20%20%20%20%0Atrapez_ans%20%3D%20trapez_function(line_function,0,1%29%0A%0A%23lists%0A%0Alist_main_1%20%3D%20(1,2,3%29%0Alist_main_2%20%3D%20(4,5,6%29%0A%0Afirst_element_of_list_main_1%20%3D%20list_main_1%5B0%5D%0A%0Aptr_to_two_lists%20%3D%20(list_main_1,list_main_2%29%0A%0Alist_of_copies_of_lists%20%3D%20(list(list_main_1%29,list(list_main_2%29%29%0A%0Afirst_element_of_first_list_of_list_of_copies_of_lists%20%3D%20list_of_copies_of_lists%5B0%5D%5B0%5D&cumulative=false&curInstr=154&heapPrimitives=false&mode=display&origin=opt-live.js&py=3&rawInputLstJSON=%5B%5D&textReferences=false